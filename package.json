{
  "name": "@zenko/cloudserver",
  "version": "8.8.28",
  "description": "Zenko CloudServer, an open-source Node.js implementation of a server handling the Amazon S3 protocol",
  "main": "index.js",
  "engines": {
    "node": ">=16"
  },
  "repository": "scality/S3",
  "keywords": [
    "s3",
    "cloud",
    "server"
  ],
  "author": "Scality Inc.",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/scality/S3/issues"
  },
  "homepage": "https://github.com/scality/S3#readme",
  "dependencies": {
    "@azure/storage-blob": "^12.12.0",
    "@hapi/joi": "^17.1.0",
    "arsenal": "git+https://github.com/scality/arsenal#82dc19b89118f68b23d1eaed424feae8b4e30225",
    "async": "~2.5.0",
    "aws-sdk": "2.905.0",
    "bucketclient": "scality/bucketclient#8.1.9",
    "bufferutil": "^4.0.6",
    "commander": "^2.9.0",
    "cron-parser": "^2.11.0",
    "diskusage": "1.1.3",
    "google-auto-auth": "^0.9.1",
    "http-proxy": "^1.17.0",
    "http-proxy-agent": "^4.0.1",
    "https-proxy-agent": "^2.2.0",
    "level-mem": "^5.0.1",
    "moment": "^2.26.0",
    "mongodb": "^5.2.0",
    "node-fetch": "^2.6.0",
    "node-forge": "^0.7.1",
    "npm-run-all": "~4.1.5",
    "prom-client": "14.2.0",
    "request": "^2.81.0",
    "scubaclient": "git+https://github.com/scality/scubaclient.git",
    "sql-where-parser": "~2.2.1",
    "utapi": "github:scality/utapi#8.1.15",
    "utf-8-validate": "^5.0.8",
    "utf8": "~2.1.1",
    "uuid": "^8.3.2",
    "vaultclient": "scality/vaultclient#8.3.20",
    "werelogs": "scality/werelogs#8.1.5",
    "ws": "^5.1.0",
    "xml2js": "~0.4.16"
  },
  "devDependencies": {
    "bluebird": "^3.3.1",
    "eslint": "^8.14.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-config-scality": "scality/Guidelines#8.2.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-mocha": "^10.1.0",
    "express": "^4.17.1",
    "ioredis": "4.9.5",
    "istanbul": "1.0.0-alpha.2",
    "istanbul-api": "1.0.0-alpha.13",
    "lolex": "^1.4.0",
    "mocha": "^2.3.4",
    "mocha-junit-reporter": "^1.23.1",
    "mocha-multi-reporters": "^1.1.7",
    "node-mocks-http": "1.5.2",
    "sinon": "^13.0.1",
    "tv4": "^1.2.7"
  },
  "scripts": {
    "cloudserver": "S3METADATA=mongodb npm-run-all --parallel start_dataserver start_s3server",
    "ft_awssdk": "cd tests/functional/aws-node-sdk && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json test/",
    "ft_awssdk_aws": "cd tests/functional/aws-node-sdk && AWS_ON_AIR=true mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json test/",
    "ft_awssdk_buckets": "cd tests/functional/aws-node-sdk && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json test/bucket",
    "ft_awssdk_objects_misc": "cd tests/functional/aws-node-sdk && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json test/legacy test/object test/service test/support",
    "ft_awssdk_versioning": "cd tests/functional/aws-node-sdk && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json test/versioning/",
    "ft_awssdk_external_backends": "cd tests/functional/aws-node-sdk && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json test/multipleBackend",
    "ft_mixed_bucket_format_version": "cd tests/functional/metadata && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json MixedVersionFormat.js",
    "ft_management": "cd tests/functional/report && yarn test",
    "ft_backbeat": "cd tests/functional/backbeat && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 40000 *.js",
    "ft_node": "cd tests/functional/raw-node && yarn test",
    "ft_node_routes": "cd tests/functional/raw-node && yarn run test-routes",
    "ft_node_route_backbeat": "cd tests/functional/raw-node && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 40000 test/routes/routeBackbeat.js",
    "ft_gcp": "cd tests/functional/raw-node && yarn run test-gcp",
    "ft_healthchecks": "cd tests/functional/healthchecks && yarn test",
    "ft_s3cmd": "cd tests/functional/s3cmd && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 40000 *.js",
    "ft_s3curl": "cd tests/functional/s3curl && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 40000 *.js",
    "ft_util": "cd tests/functional/utilities && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 40000 *.js",
    "ft_test": "npm-run-all -s ft_awssdk ft_s3cmd ft_s3curl ft_node ft_healthchecks ft_management ft_util ft_backbeat",
    "ft_search": "cd tests/functional/aws-node-sdk && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 90000 test/mdSearch",
    "ft_kmip": "cd tests/functional/kmip && mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 40000 *.js",
    "install_ft_deps": "yarn install aws-sdk@2.28.0 bluebird@3.3.1 mocha@2.3.4 mocha-junit-reporter@1.23.1 tv4@1.2.7",
    "lint": "eslint $(git ls-files '*.js')",
    "lint_md": "mdlint $(git ls-files '*.md')",
    "mem_backend": "S3BACKEND=mem node index.js",
    "start": "npm-run-all --parallel start_dmd start_s3server",
    "start_mongo": "yarn run cloudserver",
    "start_mdserver": "node mdserver.js",
    "start_dataserver": "node dataserver.js",
    "start_pfsserver": "node pfsserver.js",
    "start_s3server": "node index.js",
    "start_dmd": "npm-run-all --parallel start_mdserver start_dataserver",
    "start_utapi": "node lib/utapi/utapi.js",
    "start_secure_channel_proxy": "node bin/secure_channel_proxy.js",
    "start_metrics_server": "node bin/metrics_server.js",
    "utapi_replay": "node lib/utapi/utapiReplay.js",
    "utapi_reindex": "node lib/utapi/utapiReindex.js",
    "management_agent": "node managementAgent.js",
    "test": "CI=true S3BACKEND=mem S3QUOTA=scuba mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json --recursive tests/unit",
    "test_versionid_base62": "S3_VERSION_ID_ENCODING_TYPE=base62 CI=true S3BACKEND=mem mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json --recursive tests/unit/api",
    "test_legacy_location": "CI=true S3QUOTA=scuba S3_LOCATION_FILE=tests/locationConfig/locationConfigLegacy.json S3BACKEND=mem mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json --recursive tests/unit",
    "test_utapi_v2": "mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json --recursive tests/utapi",
    "test_quota": "mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json --recursive tests/quota",
    "multiple_backend_test": "CI=true S3BACKEND=mem S3DATA=multiple mocha --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json -t 20000 --recursive tests/multipleBackend",
    "unit_coverage": "CI=true mkdir -p coverage/unit/ && S3BACKEND=mem istanbul cover --dir coverage/unit _mocha -- --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json --recursive tests/unit",
    "unit_coverage_legacy_location": "CI=true mkdir -p coverage/unitlegacylocation/ && S3_LOCATION_FILE=tests/locationConfig/locationConfigLegacy.json S3BACKEND=mem istanbul cover --dir coverage/unitlegacylocation _mocha -- --reporter mocha-multi-reporters --reporter-options configFile=$INIT_CWD/tests/reporter-config.json --reporter mocha-junit-reporter --recursive tests/unit"
  }
}

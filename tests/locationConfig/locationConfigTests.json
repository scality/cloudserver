{
    "us-east-1": {
        "type": "file",
        "objectId": "us-east-1",
        "legacyAwsBehavior": true,
        "details": {}
    },
    "us-east-2": {
        "type": "file",
        "objectId": "us-east-2",
        "legacyAwsBehavior": true,
        "details": {}
    },
    "scality-internal-file": {
        "type": "file",
        "objectId": "scality-internal-file",
        "legacyAwsBehavior": false,
        "details": {}
    },
    "dataFile": {
        "type": "file",
        "objectId": "dataFile",
        "legacyAwsBehavior": false,
        "details": {}
    },
    "scality-internal-mem": {
        "type": "mem",
        "objectId": "scality-internal-mem",
        "legacyAwsBehavior": false,
        "details": {}
    },
    "scality-us-west-1": {
        "type": "mem",
        "objectId": "scality-us-west-1",
        "legacyAwsBehavior": false,
        "details": {}
    },
    "scality-internal-sproxyd": {
        "type": "scality",
        "objectId": "scality-internal-sproxyd",
        "legacyAwsBehavior": false,
        "details": {
            "connector": {
                "sproxyd": {
                    "bootstrap": ["127.0.0.1:81"],
                    "path": "/proxy/dc1/"
                }
            }
        }
    },
    "awsbackendencryption": {
        "type": "aws_s3",
        "objectId": "awsbackendencryption",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "cloudserver-ci-aws-backend-test-bucket",
            "bucketMatch": true,
            "credentialsProfile": "default",
            "serverSideEncryption": true
        }
    },
    "awsbackend": {
        "type": "aws_s3",
        "objectId": "awsbackend",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "cloudserver-ci-aws-backend-test-bucket",
            "bucketMatch": true,
            "credentialsProfile": "default"
        }
    },
    "awsbackendhttp": {
        "type": "aws_s3",
        "objectId": "awsbackendhttp",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "multitester555",
            "bucketMatch": true,
            "credentialsProfile": "default",
            "https": false
        }
    },
    "awsbackendmismatch": {
        "type": "aws_s3",
        "objectId": "awsbackendmismatch",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "cloudserver-ci-aws-backend-test-bucket",
            "bucketMatch": false,
            "credentialsProfile": "default"
        }
    },
    "awsbackend2": {
        "type": "aws_s3",
        "objectId": "awsbackend2",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "multitester222",
            "bucketMatch": true,
            "credentialsProfile": "default_2"
        }
    },
    "awsbackendPathStyle": {
        "type": "aws_s3",
        "objectId": "awsbackendPathStyle",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "multitester555",
            "bucketMatch": true,
            "credentialsProfile": "default",
            "pathStyle": true
        }
    },
    "azurebackend": {
        "type": "azure",
        "objectId": "azurebackend",
        "legacyAwsBehavior": true,
        "details": {
            "azureStorageEndpoint": "https://fakeaccountname.blob.core.fake.net/",
            "azureStorageAccountName": "fakeaccountname",
            "azureStorageAccessKey": "Fake00Key001",
            "bucketMatch": true,
            "azureContainerName": "s3test"
        }
    },
    "azurebackend2": {
        "type": "azure",
        "objectId": "azurebackend2",
        "legacyAwsBehavior": true,
        "details": {
            "azureStorageEndpoint": "https://fakeaccountname2.blob.core.fake.net/",
            "azureStorageAccountName": "fakeaccountname2",
            "azureStorageAccessKey": "Fake00Key002",
            "bucketMatch": true,
            "azureContainerName": "s3test2"
        }
    },
    "azurebackend3": {
        "type": "azure",
        "objectId": "azurebackend3",
        "legacyAwsBehavior": true,
        "details": {
            "azureStorageEndpoint": "https://fakeaccountname3.blob.core.fake.net/",
            "sasToken": "?sig=Fake00Sig002&sv=2021-04-21&sp=rw",
            "bucketMatch": true,
            "azureContainerName": "s3test3"
        }
    },
    "azurebackend4": {
        "type": "azure",
        "objectId": "azurebackend4",
        "legacyAwsBehavior": true,
        "details": {
            "azureStorageEndpoint": "https://fakeaccountname4.blob.core.fake.net/",
            "tenantId": "fakeTenant",
            "clientId": "fakeClient",
            "clientKey": "Fake00Key002",
            "bucketMatch": true,
            "azureContainerName": "s3test4"
        }
    },
    "azuritebackend": {
        "type": "azure",
        "objectId": "azuritebackend",
        "legacyAwsBehavior": true,
        "details": {
            "azureStorageEndpoint": "http://localhost/myfakeaccount",
            "sasToken": "?sig=Fake00Sig002&sv=2021-04-21&sp=rw",
            "bucketMatch": true,
            "azureContainerName": "s3test5"
        }
    },
    "azurebackendmismatch": {
        "type": "azure",
        "objectId": "azurebackendmismatch",
        "legacyAwsBehavior": true,
        "details": {
            "azureStorageEndpoint": "https://fakeaccountname.blob.core.fake.net/",
            "azureStorageAccountName": "fakeaccountname",
            "azureStorageAccessKey": "Fake00Key001",
            "bucketMatch": false,
            "azureContainerName": "s3test"
        }
    },
    "azurenonexistcontainer": {
        "type": "azure",
        "objectId": "azurenonexistcontainer",
        "legacyAwsBehavior": true,
        "details": {
            "azureStorageEndpoint": "https://fakeaccountname.blob.core.fake.net/",
            "azureStorageAccountName": "fakeaccountname",
            "azureStorageAccessKey": "Fake00Key123",
            "bucketMatch": true,
            "azureContainerName": "s3createbucketonfly"
        }
    },
    "gcpbackend": {
        "type": "gcp",
        "objectId": "gcpbackend",
        "legacyAwsBehavior": true,
        "details": {
            "gcpEndpoint": "storage.googleapis.com",
            "bucketName": "zenko-gcp-bucket",
            "mpuBucketName": "zenko-gcp-mpu",
            "bucketMatch": true,
            "credentialsProfile": "google"
        }
    },
    "gcpbackend2": {
        "type": "gcp",
        "objectId": "gcpbackend2",
        "legacyAwsBehavior": true,
        "details": {
            "gcpEndpoint": "storage.googleapis.com",
            "bucketName": "zenko-gcp-bucket-2",
            "mpuBucketName": "zenko-gcp-mpu-2",
            "overflowBucketName": "zenko-gcp-overflow",
            "bucketMatch": true,
            "credentialsProfile": "google_2"
        }
    },
    "gcpbackendmismatch": {
        "type": "gcp",
        "objectId": "gcpbackendmismatch",
        "legacyAwsBehavior": true,
        "details": {
            "gcpEndpoint": "storage.googleapis.com",
            "bucketName": "zenko-gcp-bucket",
            "mpuBucketName": "zenko-gcp-mpu",
            "bucketMatch": false,
            "credentialsProfile": "google"
        }
    },
    "withversioning": {
        "type": "aws_s3",
        "objectId": "withversioning",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "multitester555",
            "bucketMatch": true,
            "credentialsProfile": "default",
            "supportsVersioning": true
        }
    },
    "withoutversioning": {
        "type": "aws_s3",
        "objectId": "withoutversioning",
        "legacyAwsBehavior": true,
        "details": {
            "awsEndpoint": "s3.amazonaws.com",
            "bucketName": "multitester555",
            "bucketMatch": true,
            "credentialsProfile": "default",
            "supportsVersioning": false
        }
    },
    "transientfile": {
        "type": "file",
        "objectId": "transientfile",
        "legacyAwsBehavior": false,
        "details": {},
        "isTransient": true
    },
    "location-dmf-v1": {
        "type": "dmf",
        "objectId": "location-dmf-v1",
        "legacyAwsBehavior": false,
        "isCold": true,
        "details": {
            "endpoint": "10.0.0.200:24000",
            "repoId": ["repo1"],
            "username": "username",
            "password": "password",
            "nsId": "nsId"
        }
    }
}
